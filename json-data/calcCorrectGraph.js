

const CalcCorrectGraph = {
  0: [1,18,60,80,150,0,25,75,90,110,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  1: [1,20,60,80,150,0,35,75,90,110,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  2: [1,20,60,80,150,0,35,75,90,110,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  3: [1,20,30,50,99,0,30,62,82,100,1,1,1,1,1,0,0,0,0],
  4: [1,20,50,80,99,0,40,80,95,100,1,1,1,1,1,0,0,0,0],
  5: [1,20,40,80,99,0,75,225,270,300,1,1,1,1,1,0,0,0,0],
  6: [1,25,45,60,99,0,10,75,90,100,1,1,1,1,1,0,0,0,0],
  7: [1,20,60,80,150,0,35,75,90,110,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  8: [1,16,60,80,150,0,25,75,90,110,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  9: [1,20,60,80,99,0,20,80,95,100,1.200000048,-1.200000048,1,1,1,0,0,0,0],
  10: [1,15,30,50,99,0,10,50,60,70,1,1,1,1,1,0,0,0,0],
  11: [1,25,30,80,99,0,0,35,90,100,1,1,1,1,1,0,0,0,0],
  12: [1,15,30,45,99,0,10,55,75,100,1,1,1,1,1,0,0,0,0],
  13: [1,25,30,80,150,0,0,35,90,100,1,1,1,1,1,0,0,0,0],
  14: [1,20,40,80,99,0,40,60,85,100,1,1,1,1,1,0,0,0,0],
  15: [1,25,60,80,99,0,25,65,95,100,1,1,1,1,1,0,0,0,0],
  16: [1,18,60,80,99,0,20,75,90,100,1,1,1,1,1,0,0,0,0],
  50: [0,0.07999999821,0.1599999964,0.200000003,0.3000000119,1,0.8999999762,0.6000000238,0.25,0,1,1,1,1,1,0,0,0,0],
  51: [0,0.1000000015,0.3000000119,0.5,1,0,0,0.3000000119,0.6000000238,1,1,1,1,1,1,0,0,0,0],
  100: [1,25,40,60,99,300,800,1450,1900,2100,1.5,1.100000024,-1.200000048,-1.200000048,1,0,0,0,0],
  101: [1,20,50,60,99,40,100,280,350,450,1,1,-1.299999952,1,1,0,0,0,0],
  102: [1,150,170,240,792,40,100,120,135,155,1,1,1,1,1,0,0,0,0],
  103: [1,15,35,60,99,0,0,0,0,0,1.100000024,1.200000048,-1.200000048,-1.100000024,1,0,0,0,0],
  104: [1,15,30,50,99,80,100,125,155,170,1,1,1,1,1,0,0,0,0],
  110: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  111: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  112: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  113: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  114: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  115: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  116: [1,150,190,240,792,75,105,145,160,180,1,1,1,1,1,0,0,0,0],
  120: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  121: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  122: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  123: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  124: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  125: [0,30,40,60,99,0,0,30,40,50,1,1,1,1,1,0,0,0,0],
  126: [0,15,40,60,99,0,15,30,40,50,1,1,1,1,1,0,0,0,0],
  130: [0,30,40,60,99,0,10,15,30,40,1,1,1,1,1,0,0,0,0],
  131: [0,15,25,40,99,0,5,22,40,60,1,1,1,1,1,0,0,0,0],
  132: [0,20,35,60,99,0,40,50,60,70,1,1,1,1,1,0,0,0,0],
  133: [0,30,40,60,99,0,20,40,60,70,1,1,1,1,1,0,0,0,0],
  134: [0,25,40,60,99,0,35,50,60,70,1,1,1,1,1,0,0,0,0],
  135: [0,20,35,60,99,0,40,50,60,70,1,1,1,1,1,0,0,0,0],
  140: [0,30,40,60,99,1,1.299999952,1.399999976,1.600000024,1.99000001,1,1,1,1,1,0,0,0,0],
  150: [0,10,20,30,40,10,10,10,15,20,0,0,0,0,0,0,0,0,0],
  160: [0,10,20,40,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  161: [0,10,20,40,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  162: [0,10,20,40,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  163: [0,10,20,40,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  170: [0,10,30,60,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  171: [0,10,30,60,99,0,20,22,25,30,1,1,1,1,1,0,0,0,0],
  172: [0,10,30,60,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  173: [0,10,30,60,99,0,0,0,0,0,1,1,1,1,1,0,0,0,0],
  200: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1000000015,1,0.01999999955,92],
  210: [5,8,12,16,20,20,20,20,30,50,1,1,1,1,1,0,0,0,0],
  211: [20,40,70,100,150,100,100,100,110,130,1,1,1,1,1,0,0,0,0],
  212: [0,10,20,35,99,100,100,100,100,100,1,1,1,1,1,0,0,0,0],
  213: [0,5,20,35,99,100,100,100,90,80,1,1,1,1,1,0,0,0,0],
  220: [1,8,25,60,99,45,45,72,120,160,1,1,1.100000024,1,1,0,0,0,0],
  300: [1,76,220,350,999,1,1,2,2.299999952,2.5,1,1,1,1,1,0,0,0,0],
  301: [1,76,220,350,999,1,1,1.100000024,1.25,2,1,1,1,1,1,0,0,0,0],
  302: [1,76,220,350,999,1,1,1.100000024,1.25,1.399999976,1,1,1,1,1,0,0,0,0],
  303: [1,76,220,350,999,93,114,150,165,250,1,1,1,1,1,0,0,0,0],
  304: [1,76,220,350,999,100,120,160,200,250,1,1,1,1,1,0,0,0,0],
  310: [1,30,215,333,902,1,1,4,5,5,1,1,1,1,1,0,0,0,0],
  320: [1,30,215,333,902,1,1,5,6,6,1,1,1,1,1,0,0,0,0],
  330: [1,30,215,333,902,1,1,4,5,5,1,1,1,1,1,0,0,0,0],
  340: [1,30,215,333,902,1,1,3,3.5,3.5,1,1,1,1,1,0,0,0,0],
  341: [1,30,215,333,902,1,1,4.5,5,5,1,1,1,1,1,0,0,0,0],
  342: [1,30,100,200,902,1,1,1.799999952,2.599999905,2.599999905,1,1,1,1,1,0,0,0,0],
  350: [1,30,215,262,902,1,1,2.5,3,3,1,1,1,1,1,0,0,0,0],
  351: [1,30,215,262,902,1,1,2.5,3,3,1,1,1,1,1,0,0,0,0],
  352: [1,30,220,220,902,1,1,2.5,3,3,1,1,1,1,1,0,0,0,0],
  400: [1,30,215,333,902,1,1,3.5,3.5,3.5,1,1,1,1,1,0,0,0,0],
  401: [1,30,215,333,902,1,1,2,2.5,2.5,1,1,1,1,1,0,0,0,0],
  500: [0,20,30,65,100,10,10,10,10,10,-99,-99,-99,-99,-99,0,0,0,0]
}

module.exports = function (curveIndex, val) {

  if (!CalcCorrectGraph[curveIndex]) { return -1; }

  const breakpoints = CalcCorrectGraph[curveIndex].slice(0, 5);
  const growVals = CalcCorrectGraph[curveIndex].slice(5, 10);
  const adjGrow = CalcCorrectGraph[curveIndex].slice(10, 15);

  let _val = val;
  // clamp val to max breakpoint
  if (_val > breakpoints[4]) {
    _val = breakpoints[4];
  }

  let index = 0;
  for (let bp = 0; bp < breakpoints.length; bp++) {
    if (_val <= breakpoints[bp]) {
      index = bp;
      break;
    }
  }
  
  let scal = (_val - breakpoints[index - 1]) / (breakpoints[index] - breakpoints[index - 1])
  let exp = adjGrow[index - 1] > 0 ? Math.pow(scal, adjGrow[index - 1]) : 1 - Math.pow(1 - scal, -1 * adjGrow[index - 1]);

  return growVals[index - 1] + (growVals[index] - growVals[index - 1]) * exp;
}

